import pandas as pd
import numpy as np
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Load the data
file_path = 'portal/arranged-data-water levels   bila dah.csv'
data = pd.read_csv(file_path)

# Inspect the columns
print("Columns in the dataset:")
print(data.columns)

# Convert the 'category' column to datetime format
data['category'] = pd.to_datetime(data['category'], format='%a %b %d %Y')

# Group by month and calculate the monthly average
data.set_index('category', inplace=True)  # Set the datetime column as the index
monthly_data = data.resample('M').mean()  # Resample to monthly frequency and calculate means

# Reset the index for plotting and easier handling
monthly_data.reset_index(inplace=True)

# Extract the necessary columns
time = monthly_data['category']
insitu = monthly_data['insitu']
ocog = monthly_data['OCOG_Water_Levels']
ocean = monthly_data['Ocean_Water_Levels']
sea_ice = monthly_data['Sea_Ice_Water_Levels']

# Helper function to calculate RMSE and R²
def calculate_metrics(y_true, y_pred):
    rmse = np.sqrt(mean_squared_error(y_true, y_pred))
    r2 = r2_score(y_true, y_pred)
    return rmse, r2

# Calculate metrics for each retracker
metrics = {}
for retracker, values in zip(['OCOG', 'Ocean', 'Sea Ice'], [ocog, ocean, sea_ice]):
    rmse, r2 = calculate_metrics(insitu, values)
    metrics[retracker] = {'RMSE': rmse, 'R²': r2}

# Print metrics
print("\nMetrics for monthly data:")
for retracker, metric in metrics.items():
    print(f"{retracker} Retracker:")
    print(f"  RMSE: {metric['RMSE']:.3f}")
    print(f"  R²: {metric['R²']:.3f}")
    print()

# Plot scatter comparisons
for retracker, values in zip(['OCOG', 'Ocean', 'Sea Ice'], [ocog, ocean, sea_ice]):
    plt.figure(figsize=(8, 6))
    plt.scatter(insitu, values, color='blue', alpha=0.6, edgecolor='k', label=f"{retracker} Water Levels")
    plt.plot(insitu, insitu, color='red', linestyle='--', label="1:1 Line")
    plt.xlabel("In-Situ Water Levels (m)")
    plt.ylabel(f"{retracker} Water Levels (m)")
    plt.title(f"In-Situ vs {retracker} Water Levels (Monthly Averages)")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    plt.show()

# Plot time-series comparisons
for retracker, values in zip(['OCOG', 'Ocean', 'Sea Ice'], [ocog, ocean, sea_ice]):
    plt.figure(figsize=(12, 6))
    plt.plot(time, insitu, label="In-Situ Water Levels", color='black', linestyle='-', linewidth=2)
    plt.plot(time, values, label=f"{retracker} Water Levels", linestyle='--', linewidth=1.5)
    plt.xlabel("Time")
    plt.ylabel("Water Levels (m)")
    plt.title(f"Time-Series: In-Situ vs {retracker} Water Levels (Monthly Averages)")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    plt.show()
